// prime no . checker using isPrime function
// code 
#include <stdio.h>

// Function to check if a number is prime
// GitHub username: Jaycse3124
int isPrime(int n) { 
    int is = 1;
    
    // If the number is less than or equal to 1, it's not prime
    if (n <= 1) {
        is = 0;
    }
    else {
        // Check divisibility from 2 to square root of n
        for (int i = 2; i <= n/2; i++) {
            if (n % i == 0) {
                is = 0; 
                break;// If divisible by any number, 2220ot prime
                
            }
        }
    }
    return is;
}


int main() {
    int n;
    
    // GitHub username: Jaycse3124
    // Taking input from user
    printf("Enter a number to check if it's prime: ");
    scanf("%d", &n);
    
    // Calling isPrime function to check if the entered number is prime
    int temp = isPrime(n);
    if (temp) {
        printf("%d is a prime number.", n);
    } else {
        printf("%d is not a prime number.", n);
    }
    return 0;
}

//printing prime numbers in an interval
// code 
#include <stdio.h>

// Function to check if a number is prime
// GitHub username: Jaycse3124
int isPrime(int n) { 
    int is = 1;
    
    // If the number is less than or equal to 1, it's not prime
    if (n <= 1) {
        is = 0;
    }
    else {
        // Check divisibility from 2 to square root of n
        for (int i = 2; i <= n/2; i++) {
            if (n % i == 0) {
                is = 0; 
                break;// If divisible by any number, 2220ot prime
                
            }
        }
    }
    return is;
}

int main() {
    int num1,num2,i,temp;
    
    // GitHub username: Jaycse3124
    // Taking input from user
    printf("Enter the first number: ");
    scanf("%d", &num1);
printf("enter the second number:");
scanf("%d",&num2);
    // Calling isPrime function to check if the entered number is prime
    for(i=num1;i<num2;++i)
    {
    temp=isPrime(i);
    if(temp==1)
    {
        printf("%d,",i);
    }
    }
    return 0;
}

// C Program for Quadratic Equation Roots
// C program to find roots of 
// a quadratic equation 
#include <math.h> 
#include <stdio.h> 
#include <stdlib.h> 

// Prints roots of quadratic 
// equation ax*2 + bx + x 
void findRoots(int a, int b, int c) 
{ 
	// If a is 0, then equation is 
	// not quadratic, but linear 
//username Jaycse3124
	if (a == 0) { 
		printf("Invalid"); 
		return; 
	} 

	int d = b * b - 4 * a * c; 
	double sqrt_val = sqrt(abs(d)); 
//username Jaycse3124

	if (d > 0) { 
		printf("Roots are real and different\n"); 
		printf("%f\n%f", (double)(-b + sqrt_val) / (2 * a), 
			(double)(-b - sqrt_val) / (2 * a)); 
	} 
	else if (d == 0) { 
		printf("Roots are real and same\n"); 
		printf("%f", -(double)b / (2 * a)); 
	} 
	else // d < 0 
	{ 
		printf("Roots are complex\n"); 
		printf("%f + i%f\n%f - i%f", -(double)b / (2 * a), 
			sqrt_val / (2 * a), -(double)b / (2 * a), 
			sqrt_val / (2 * a)); 
	} 
} 
//username Jaycse3124

// Driver code 
int main() 
{ 
	int a = 1, b = -7, c = 12;
//username Jaycse3124


	// Function call 
	findRoots(a, b, c); 
	return 0; 
}

